package es.iessaladillo.esthercastaneda.mastermind.ui.menu.homeimport android.app.AlertDialogimport android.content.SharedPreferencesimport android.content.res.Configurationimport android.os.Bundleimport android.widget.Toastimport androidx.core.content.editimport androidx.fragment.app.Fragmentimport androidx.navigation.NavControllerimport androidx.navigation.fragment.NavHostFragmentimport androidx.preference.PreferenceManagerimport assets.blinkimport es.iessaladillo.esthercastaneda.mastermind.Rimport kotlinx.android.synthetic.main.home_fragment.*import kotlinx.android.synthetic.main.main_activity.*import java.util.*class HomeFragment : Fragment(R.layout.home_fragment) {    private val navController: NavController by lazy {        NavHostFragment.findNavController(navHostFragment)    }    private val settings: SharedPreferences by lazy {        PreferenceManager.getDefaultSharedPreferences(context)    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setupLanguage()    }    override fun onActivityCreated(savedInstanceState: Bundle?) {        super.onActivityCreated(savedInstanceState)        setupViews()    }    /*        Configuración de vistas.    */    private fun setupViews() {        isFirstSession()        setupButtons()        btnPlay.blink()    }    private fun isFirstSession() {        if (settings.getBoolean(getString(R.string.firstSessionKey), true)) {            changeLanguage()            navController.navigate(R.id.action_homeFragment_to_manualFragment)        }    }    /*        Cambiar idioma del dispositivo.    */    private fun changeLanguage() {        val defaultLanguage = Locale.getDefault().displayLanguage.toString().toLowerCase(Locale.ROOT)        if (defaultLanguage.equals(getString(R.string.prefLanguage_defaultValue).toLowerCase(Locale.ROOT))) {            settings.edit {                putString(                    getString(R.string.prefLanguage_key),                    getString(R.string.prefLanguage_defaultValue)                )            }        } else {            settings.edit {                putString(getString(R.string.prefLanguage_key), getString(R.string.english_value))            }        }    }    /*        Configuración del idioma del dispositivo.    */    private fun setupLanguage() {        val newLocale: Locale        val config = Configuration()        val defaultLanguage = settings.getString(getString(R.string.prefLanguage_key), getString(R.string.prefLanguage_defaultValue))        if (defaultLanguage.equals(getString(R.string.prefLanguage_defaultValue))) {            settings.edit {                putString(                    getString(R.string.prefLanguage_key),                    getString(R.string.prefLanguage_defaultValue)                )            }            newLocale = Locale("es", "ES")        } else {            settings.edit {                putString(getString(R.string.prefLanguage_key), getString(R.string.english_value))            }            newLocale = Locale("en", "EN")        }        Locale.setDefault(newLocale)        config.locale = newLocale        this.resources.updateConfiguration(config, this.resources.displayMetrics)    }    /*        Configuración de botones.    */    private fun setupButtons() {        btnHome.setOnClickListener {            AlertDialog.Builder(context).setTitle(getString(R.string.quitGame))                .setMessage(getString(R.string.msgQuitGame))                .setCancelable(false)                .setPositiveButton(getString(R.string.txtYes)) { _, _ -> super.getActivity()?.finish() }                .setNegativeButton(getString(R.string.txtNo)){ _, _ -> }                .show()        }        btnPlay.setOnClickListener {            if (settings.getLong(getString(R.string.key_currentIdUser), -1L) == -1L) {                Toast.makeText(context, getString(R.string.msg_create_player), Toast.LENGTH_LONG).show()                navController.navigate(R.id.action_homeFragment_to_profileFragment)            } else {                navController.navigate(R.id.action_homeFragment_to_modeGame)            }        }        btnInstructions.setOnClickListener {            navController.navigate(R.id.action_homeFragment_to_manualFragment)        }        btnSet.setOnClickListener {            navController.navigate(R.id.action_homeFragment_to_settingsFragment)        }        btnPlayer.setOnClickListener {            navController.navigate(R.id.action_homeFragment_to_profileFragment)        }    }}